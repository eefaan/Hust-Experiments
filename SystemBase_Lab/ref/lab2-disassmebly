
bomb:     file format elf32-i386


Disassembly of section .init:

080486f4 <_init>:
 80486f4:	53                   	push   %ebx
 80486f5:	83 ec 08             	sub    $0x8,%esp
 80486f8:	e8 13 02 00 00       	call   8048910 <__x86.get_pc_thunk.bx>
 80486fd:	81 c3 03 39 00 00    	add    $0x3903,%ebx
 8048703:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048709:	85 c0                	test   %eax,%eax
 804870b:	74 05                	je     8048712 <_init+0x1e>
 804870d:	e8 be 01 00 00       	call   80488d0 <__sprintf_chk@plt+0x10>
 8048712:	83 c4 08             	add    $0x8,%esp
 8048715:	5b                   	pop    %ebx
 8048716:	c3                   	ret

Disassembly of section .plt:

08048720 <read@plt-0x10>:
 8048720:	ff 35 04 c0 04 08    	pushl  0x804c004
 8048726:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804872c:	00 00                	add    %al,(%eax)
	...

08048730 <read@plt>:
 8048730:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8048736:	68 00 00 00 00       	push   $0x0
 804873b:	e9 e0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048740 <fflush@plt>:
 8048740:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8048746:	68 08 00 00 00       	push   $0x8
 804874b:	e9 d0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048750 <fgets@plt>:
 8048750:	ff 25 14 c0 04 08    	jmp    *0x804c014
 8048756:	68 10 00 00 00       	push   $0x10
 804875b:	e9 c0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048760 <signal@plt>:
 8048760:	ff 25 18 c0 04 08    	jmp    *0x804c018
 8048766:	68 18 00 00 00       	push   $0x18
 804876b:	e9 b0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048770 <sleep@plt>:
 8048770:	ff 25 1c c0 04 08    	jmp    *0x804c01c
 8048776:	68 20 00 00 00       	push   $0x20
 804877b:	e9 a0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048780 <alarm@plt>:
 8048780:	ff 25 20 c0 04 08    	jmp    *0x804c020
 8048786:	68 28 00 00 00       	push   $0x28
 804878b:	e9 90 ff ff ff       	jmp    8048720 <_init+0x2c>

08048790 <__stack_chk_fail@plt>:
 8048790:	ff 25 24 c0 04 08    	jmp    *0x804c024
 8048796:	68 30 00 00 00       	push   $0x30
 804879b:	e9 80 ff ff ff       	jmp    8048720 <_init+0x2c>

080487a0 <strcpy@plt>:
 80487a0:	ff 25 28 c0 04 08    	jmp    *0x804c028
 80487a6:	68 38 00 00 00       	push   $0x38
 80487ab:	e9 70 ff ff ff       	jmp    8048720 <_init+0x2c>

080487b0 <getenv@plt>:
 80487b0:	ff 25 2c c0 04 08    	jmp    *0x804c02c
 80487b6:	68 40 00 00 00       	push   $0x40
 80487bb:	e9 60 ff ff ff       	jmp    8048720 <_init+0x2c>

080487c0 <puts@plt>:
 80487c0:	ff 25 30 c0 04 08    	jmp    *0x804c030
 80487c6:	68 48 00 00 00       	push   $0x48
 80487cb:	e9 50 ff ff ff       	jmp    8048720 <_init+0x2c>

080487d0 <__memmove_chk@plt>:
 80487d0:	ff 25 34 c0 04 08    	jmp    *0x804c034
 80487d6:	68 50 00 00 00       	push   $0x50
 80487db:	e9 40 ff ff ff       	jmp    8048720 <_init+0x2c>

080487e0 <exit@plt>:
 80487e0:	ff 25 38 c0 04 08    	jmp    *0x804c038
 80487e6:	68 58 00 00 00       	push   $0x58
 80487eb:	e9 30 ff ff ff       	jmp    8048720 <_init+0x2c>

080487f0 <__libc_start_main@plt>:
 80487f0:	ff 25 3c c0 04 08    	jmp    *0x804c03c
 80487f6:	68 60 00 00 00       	push   $0x60
 80487fb:	e9 20 ff ff ff       	jmp    8048720 <_init+0x2c>

08048800 <write@plt>:
 8048800:	ff 25 40 c0 04 08    	jmp    *0x804c040
 8048806:	68 68 00 00 00       	push   $0x68
 804880b:	e9 10 ff ff ff       	jmp    8048720 <_init+0x2c>

08048810 <__isoc99_sscanf@plt>:
 8048810:	ff 25 44 c0 04 08    	jmp    *0x804c044
 8048816:	68 70 00 00 00       	push   $0x70
 804881b:	e9 00 ff ff ff       	jmp    8048720 <_init+0x2c>

08048820 <fopen@plt>:
 8048820:	ff 25 48 c0 04 08    	jmp    *0x804c048
 8048826:	68 78 00 00 00       	push   $0x78
 804882b:	e9 f0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048830 <__errno_location@plt>:
 8048830:	ff 25 4c c0 04 08    	jmp    *0x804c04c
 8048836:	68 80 00 00 00       	push   $0x80
 804883b:	e9 e0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048840 <__printf_chk@plt>:
 8048840:	ff 25 50 c0 04 08    	jmp    *0x804c050
 8048846:	68 88 00 00 00       	push   $0x88
 804884b:	e9 d0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048850 <socket@plt>:
 8048850:	ff 25 54 c0 04 08    	jmp    *0x804c054
 8048856:	68 90 00 00 00       	push   $0x90
 804885b:	e9 c0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048860 <__fprintf_chk@plt>:
 8048860:	ff 25 58 c0 04 08    	jmp    *0x804c058
 8048866:	68 98 00 00 00       	push   $0x98
 804886b:	e9 b0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048870 <gethostbyname@plt>:
 8048870:	ff 25 5c c0 04 08    	jmp    *0x804c05c
 8048876:	68 a0 00 00 00       	push   $0xa0
 804887b:	e9 a0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048880 <strtol@plt>:
 8048880:	ff 25 60 c0 04 08    	jmp    *0x804c060
 8048886:	68 a8 00 00 00       	push   $0xa8
 804888b:	e9 90 fe ff ff       	jmp    8048720 <_init+0x2c>

08048890 <connect@plt>:
 8048890:	ff 25 64 c0 04 08    	jmp    *0x804c064
 8048896:	68 b0 00 00 00       	push   $0xb0
 804889b:	e9 80 fe ff ff       	jmp    8048720 <_init+0x2c>

080488a0 <close@plt>:
 80488a0:	ff 25 68 c0 04 08    	jmp    *0x804c068
 80488a6:	68 b8 00 00 00       	push   $0xb8
 80488ab:	e9 70 fe ff ff       	jmp    8048720 <_init+0x2c>

080488b0 <__ctype_b_loc@plt>:
 80488b0:	ff 25 6c c0 04 08    	jmp    *0x804c06c
 80488b6:	68 c0 00 00 00       	push   $0xc0
 80488bb:	e9 60 fe ff ff       	jmp    8048720 <_init+0x2c>

080488c0 <__sprintf_chk@plt>:
 80488c0:	ff 25 70 c0 04 08    	jmp    *0x804c070
 80488c6:	68 c8 00 00 00       	push   $0xc8
 80488cb:	e9 50 fe ff ff       	jmp    8048720 <_init+0x2c>

Disassembly of section .plt.got:

080488d0 <.plt.got>:
 80488d0:	ff 25 fc bf 04 08    	jmp    *0x804bffc
 80488d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080488e0 <_start>:
 80488e0:	31 ed                	xor    %ebp,%ebp
 80488e2:	5e                   	pop    %esi
 80488e3:	89 e1                	mov    %esp,%ecx
 80488e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80488e8:	50                   	push   %eax
 80488e9:	54                   	push   %esp
 80488ea:	52                   	push   %edx
 80488eb:	68 40 9e 04 08       	push   $0x8049e40
 80488f0:	68 e0 9d 04 08       	push   $0x8049de0
 80488f5:	51                   	push   %ecx
 80488f6:	56                   	push   %esi
 80488f7:	68 db 89 04 08       	push   $0x80489db
 80488fc:	e8 ef fe ff ff       	call   80487f0 <__libc_start_main@plt>
 8048901:	f4                   	hlt
 8048902:	66 90                	xchg   %ax,%ax
 8048904:	66 90                	xchg   %ax,%ax
 8048906:	66 90                	xchg   %ax,%ax
 8048908:	66 90                	xchg   %ax,%ax
 804890a:	66 90                	xchg   %ax,%ax
 804890c:	66 90                	xchg   %ax,%ax
 804890e:	66 90                	xchg   %ax,%ax

08048910 <__x86.get_pc_thunk.bx>:
 8048910:	8b 1c 24             	mov    (%esp),%ebx
 8048913:	c3                   	ret
 8048914:	66 90                	xchg   %ax,%ax
 8048916:	66 90                	xchg   %ax,%ax
 8048918:	66 90                	xchg   %ax,%ax
 804891a:	66 90                	xchg   %ax,%ax
 804891c:	66 90                	xchg   %ax,%ax
 804891e:	66 90                	xchg   %ax,%ax

08048920 <deregister_tm_clones>:
 8048920:	b8 a3 c3 04 08       	mov    $0x804c3a3,%eax
 8048925:	2d a0 c3 04 08       	sub    $0x804c3a0,%eax
 804892a:	83 f8 06             	cmp    $0x6,%eax
 804892d:	76 1a                	jbe    8048949 <deregister_tm_clones+0x29>
 804892f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048934:	85 c0                	test   %eax,%eax
 8048936:	74 11                	je     8048949 <deregister_tm_clones+0x29>
 8048938:	55                   	push   %ebp
 8048939:	89 e5                	mov    %esp,%ebp
 804893b:	83 ec 14             	sub    $0x14,%esp
 804893e:	68 a0 c3 04 08       	push   $0x804c3a0
 8048943:	ff d0                	call   *%eax
 8048945:	83 c4 10             	add    $0x10,%esp
 8048948:	c9                   	leave
 8048949:	f3 c3                	repz ret
 804894b:	90                   	nop
 804894c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048950 <register_tm_clones>:
 8048950:	b8 a0 c3 04 08       	mov    $0x804c3a0,%eax
 8048955:	2d a0 c3 04 08       	sub    $0x804c3a0,%eax
 804895a:	c1 f8 02             	sar    $0x2,%eax
 804895d:	89 c2                	mov    %eax,%edx
 804895f:	c1 ea 1f             	shr    $0x1f,%edx
 8048962:	01 d0                	add    %edx,%eax
 8048964:	d1 f8                	sar    %eax
 8048966:	74 1b                	je     8048983 <register_tm_clones+0x33>
 8048968:	ba 00 00 00 00       	mov    $0x0,%edx
 804896d:	85 d2                	test   %edx,%edx
 804896f:	74 12                	je     8048983 <register_tm_clones+0x33>
 8048971:	55                   	push   %ebp
 8048972:	89 e5                	mov    %esp,%ebp
 8048974:	83 ec 10             	sub    $0x10,%esp
 8048977:	50                   	push   %eax
 8048978:	68 a0 c3 04 08       	push   $0x804c3a0
 804897d:	ff d2                	call   *%edx
 804897f:	83 c4 10             	add    $0x10,%esp
 8048982:	c9                   	leave
 8048983:	f3 c3                	repz ret
 8048985:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048989:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048990 <__do_global_dtors_aux>:
 8048990:	80 3d c8 c3 04 08 00 	cmpb   $0x0,0x804c3c8
 8048997:	75 13                	jne    80489ac <__do_global_dtors_aux+0x1c>
 8048999:	55                   	push   %ebp
 804899a:	89 e5                	mov    %esp,%ebp
 804899c:	83 ec 08             	sub    $0x8,%esp
 804899f:	e8 7c ff ff ff       	call   8048920 <deregister_tm_clones>
 80489a4:	c6 05 c8 c3 04 08 01 	movb   $0x1,0x804c3c8
 80489ab:	c9                   	leave
 80489ac:	f3 c3                	repz ret
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <frame_dummy>:
 80489b0:	b8 10 bf 04 08       	mov    $0x804bf10,%eax
 80489b5:	8b 10                	mov    (%eax),%edx
 80489b7:	85 d2                	test   %edx,%edx
 80489b9:	75 05                	jne    80489c0 <frame_dummy+0x10>
 80489bb:	eb 93                	jmp    8048950 <register_tm_clones>
 80489bd:	8d 76 00             	lea    0x0(%esi),%esi
 80489c0:	ba 00 00 00 00       	mov    $0x0,%edx
 80489c5:	85 d2                	test   %edx,%edx
 80489c7:	74 f2                	je     80489bb <frame_dummy+0xb>
 80489c9:	55                   	push   %ebp
 80489ca:	89 e5                	mov    %esp,%ebp
 80489cc:	83 ec 14             	sub    $0x14,%esp
 80489cf:	50                   	push   %eax
 80489d0:	ff d2                	call   *%edx
 80489d2:	83 c4 10             	add    $0x10,%esp
 80489d5:	c9                   	leave
 80489d6:	e9 75 ff ff ff       	jmp    8048950 <register_tm_clones>

080489db <main>:
 80489db:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80489df:	83 e4 f0             	and    $0xfffffff0,%esp
 80489e2:	ff 71 fc             	pushl  -0x4(%ecx)
 80489e5:	55                   	push   %ebp
 80489e6:	89 e5                	mov    %esp,%ebp
 80489e8:	53                   	push   %ebx
 80489e9:	51                   	push   %ecx
 80489ea:	8b 01                	mov    (%ecx),%eax
 80489ec:	8b 59 04             	mov    0x4(%ecx),%ebx
 80489ef:	83 f8 01             	cmp    $0x1,%eax
 80489f2:	0f 84 01 01 00 00    	je     8048af9 <main+0x11e>
 80489f8:	83 f8 02             	cmp    $0x2,%eax
 80489fb:	0f 85 24 01 00 00    	jne    8048b25 <main+0x14a>
 8048a01:	83 ec 08             	sub    $0x8,%esp
 8048a04:	68 68 9e 04 08       	push   $0x8049e68
 8048a09:	ff 73 04             	pushl  0x4(%ebx)
 8048a0c:	e8 0f fe ff ff       	call   8048820 <fopen@plt>
 8048a11:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 8048a16:	83 c4 10             	add    $0x10,%esp
 8048a19:	85 c0                	test   %eax,%eax
 8048a1b:	0f 84 e7 00 00 00    	je     8048b08 <main+0x12d>
 8048a21:	e8 e5 05 00 00       	call   804900b <initialize_bomb>
 8048a26:	83 ec 0c             	sub    $0xc,%esp
 8048a29:	68 ec 9e 04 08       	push   $0x8049eec
 8048a2e:	e8 8d fd ff ff       	call   80487c0 <puts@plt>

 8048a33:	c7 04 24 28 9f 04 08 	movl   $0x8049f28,(%esp)
 8048a3a:	e8 81 fd ff ff       	call   80487c0 <puts@plt>
 8048a3f:	e8 b7 06 00 00       	call   80490fb <read_line>
 8048a44:	89 04 24             	mov    %eax,(%esp)
 8048a47:	e8 f6 00 00 00       	call   8048b42 <phase_1>
 8048a4c:	e8 a9 07 00 00       	call   80491fa <phase_defused>

 8048a51:	c7 04 24 54 9f 04 08 	movl   $0x8049f54,(%esp)
 8048a58:	e8 63 fd ff ff       	call   80487c0 <puts@plt>
 8048a5d:	e8 99 06 00 00       	call   80490fb <read_line>
 8048a62:	89 04 24             	mov    %eax,(%esp)
 8048a65:	e8 fb 00 00 00       	call   8048b65 <phase_2>
 8048a6a:	e8 8b 07 00 00       	call   80491fa <phase_defused>

 8048a6f:	c7 04 24 a1 9e 04 08 	movl   $0x8049ea1,(%esp)
 8048a76:	e8 45 fd ff ff       	call   80487c0 <puts@plt>
 8048a7b:	e8 7b 06 00 00       	call   80490fb <read_line>
 8048a80:	89 04 24             	mov    %eax,(%esp)
 8048a83:	e8 44 01 00 00       	call   8048bcc <phase_3>
 8048a88:	e8 6d 07 00 00       	call   80491fa <phase_defused>

 8048a8d:	c7 04 24 bf 9e 04 08 	movl   $0x8049ebf,(%esp)
 8048a94:	e8 27 fd ff ff       	call   80487c0 <puts@plt>
 8048a99:	e8 5d 06 00 00       	call   80490fb <read_line>
 8048a9e:	89 04 24             	mov    %eax,(%esp)
 8048aa1:	e8 14 02 00 00       	call   8048cba <phase_4>
 8048aa6:	e8 4f 07 00 00       	call   80491fa <phase_defused>

 8048aab:	c7 04 24 80 9f 04 08 	movl   $0x8049f80,(%esp)
 8048ab2:	e8 09 fd ff ff       	call   80487c0 <puts@plt>
 8048ab7:	e8 3f 06 00 00       	call   80490fb <read_line>
 8048abc:	89 04 24             	mov    %eax,(%esp)
 8048abf:	e8 6a 02 00 00       	call   8048d2e <phase_5>
 8048ac4:	e8 31 07 00 00       	call   80491fa <phase_defused>

 8048ac9:	c7 04 24 ce 9e 04 08 	movl   $0x8049ece,(%esp)
 8048ad0:	e8 eb fc ff ff       	call   80487c0 <puts@plt>
 8048ad5:	e8 21 06 00 00       	call   80490fb <read_line>
 8048ada:	89 04 24             	mov    %eax,(%esp)
 8048add:	e8 94 02 00 00       	call   8048d76 <phase_6>
 8048ae2:	e8 13 07 00 00       	call   80491fa <phase_defused>

 8048ae7:	83 c4 10             	add    $0x10,%esp
 8048aea:	b8 00 00 00 00       	mov    $0x0,%eax
 8048aef:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048af2:	59                   	pop    %ecx
 8048af3:	5b                   	pop    %ebx
 8048af4:	5d                   	pop    %ebp
 8048af5:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048af8:	c3                   	ret
 8048af9:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 8048afe:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 8048b03:	e9 19 ff ff ff       	jmp    8048a21 <main+0x46>
 8048b08:	ff 73 04             	pushl  0x4(%ebx)
 8048b0b:	ff 33                	pushl  (%ebx)
 8048b0d:	68 6a 9e 04 08       	push   $0x8049e6a
 8048b12:	6a 01                	push   $0x1
 8048b14:	e8 27 fd ff ff       	call   8048840 <__printf_chk@plt>
 8048b19:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048b20:	e8 bb fc ff ff       	call   80487e0 <exit@plt>
 8048b25:	83 ec 04             	sub    $0x4,%esp
 8048b28:	ff 33                	pushl  (%ebx)
 8048b2a:	68 87 9e 04 08       	push   $0x8049e87
 8048b2f:	6a 01                	push   $0x1
 8048b31:	e8 0a fd ff ff       	call   8048840 <__printf_chk@plt>
 8048b36:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048b3d:	e8 9e fc ff ff       	call   80487e0 <exit@plt>

08048b42 <phase_1>:
 8048b42:	83 ec 14             	sub    $0x14,%esp
 8048b45:	68 a4 9f 04 08       	push   $0x8049fa4
 8048b4a:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048b4e:	e8 53 04 00 00       	call   8048fa6 <strings_not_equal>
 8048b53:	83 c4 10             	add    $0x10,%esp
 8048b56:	85 c0                	test   %eax,%eax
 8048b58:	75 04                	jne    8048b5e <phase_1+0x1c>
 8048b5a:	83 c4 0c             	add    $0xc,%esp
 8048b5d:	c3                   	ret
 8048b5e:	e8 38 05 00 00       	call   804909b <explode_bomb>
 8048b63:	eb f5                	jmp    8048b5a <phase_1+0x18>

08048b65 <phase_2>:
 8048b65:	56                   	push   %esi
 8048b66:	53                   	push   %ebx
 8048b67:	83 ec 2c             	sub    $0x2c,%esp
 8048b6a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax      ;gs:14->esp
 8048b70:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048b74:	31 c0                	xor    %eax,%eax          ;eax->0
 8048b76:	8d 44 24 0c          	lea    0xc(%esp),%eax     ;addr_topstack->eax
 8048b7a:	50                   	push   %eax
 8048b7b:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048b7f:	e8 3c 05 00 00       	call   80490c0 <read_six_numbers>
 8048b84:	83 c4 10             	add    $0x10,%esp
 8048b87:	83 7c 24 04 01       	cmpl   $0x1,0x4(%esp)           ;first
 8048b8c:	74 05                	je     8048b93 <phase_2+0x2e>   ;je 93
 8048b8e:	e8 08 05 00 00       	call   804909b <explode_bomb>
 8048b93:	8d 5c 24 04          	lea    0x4(%esp),%ebx
 8048b97:	8d 74 24 18          	lea    0x18(%esp),%esi
 8048b9b:	eb 07                	jmp    8048ba4 <phase_2+0x3f>   ;je a4
 8048b9d:	83 c3 04             	add    $0x4,%ebx
 8048ba0:	39 f3                	cmp    %esi,%ebx
 8048ba2:	74 10                	je     8048bb4 <phase_2+0x4f>   ;je b4
 8048ba4:	8b 03                	mov    (%ebx),%eax
 8048ba6:	01 c0                	add    %eax,%eax
 8048ba8:	39 43 04             	cmp    %eax,0x4(%ebx)
 8048bab:	74 f0                	je     8048b9d <phase_2+0x38>   ;9d
 8048bad:	e8 e9 04 00 00       	call   804909b <explode_bomb>
 8048bb2:	eb e9                	jmp    8048b9d <phase_2+0x38>
 8048bb4:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048bb8:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048bbf:	75 06                	jne    8048bc7 <phase_2+0x62>
 8048bc1:	83 c4 24             	add    $0x24,%esp
 8048bc4:	5b                   	pop    %ebx
 8048bc5:	5e                   	pop    %esi
 8048bc6:	c3                   	ret
 8048bc7:	e8 c4 fb ff ff       	call   8048790 <__stack_chk_fail@plt>

08048bcc <phase_3>:
 8048bcc:	83 ec 1c             	sub    $0x1c,%esp
 8048bcf:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048bd5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048bd9:	31 c0                	xor    %eax,%eax    ;0->eax
 8048bdb:	8d 44 24 08          	lea    0x8(%esp),%eax   ;esp+8->eax, esp--
 8048bdf:	50                   	push   %eax
 8048be0:	8d 44 24 08          	lea    0x8(%esp),%eax   ;esp+8->eax, esp--
 8048be4:	50                   	push   %eax             ;result esp+4 ->eax, copy esp+8/4
 8048be5:	68 6f a1 04 08       	push   $0x804a16f
 8048bea:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048bee:	e8 1d fc ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8048bf3:	83 c4 10             	add    $0x10,%esp
 8048bf6:	83 f8 01             	cmp    $0x1,%eax
 8048bf9:	7e 12                	jle    8048c0d <phase_3+0x41>;bomb, need num>1
 8048bfb:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)
 8048c00:	77 43                	ja     8048c45 <phase_3+0x79>;bomb, need @1<=7
 8048c02:	8b 44 24 04          	mov    0x4(%esp),%eax         ;@1->eax
 8048c06:	ff 24 85 00 a0 04 08 	jmp    *0x804a000(,%eax,4)
 8048c0d:	e8 89 04 00 00       	call   804909b <explode_bomb>
 8048c12:	eb e7                	jmp    8048bfb <phase_3+0x2f>;bfb

 8048c14:	b8 9e 00 00 00       	mov    $0x9e,%eax;+4//158
 8048c19:	eb 3b                	jmp    8048c56 <phase_3+0x8a>;c56

 8048c1b:	b8 d7 01 00 00       	mov    $0x1d7,%eax;+8//471
 8048c20:	eb 34                	jmp    8048c56 <phase_3+0x8a>

 8048c22:	b8 29 03 00 00       	mov    $0x329,%eax;+12//
 8048c27:	eb 2d                	jmp    8048c56 <phase_3+0x8a>

 8048c29:	b8 57 03 00 00       	mov    $0x357,%eax;+16
 8048c2e:	eb 26                	jmp    8048c56 <phase_3+0x8a>

 8048c30:	b8 3c 00 00 00       	mov    $0x3c,%eax;+20//60
 8048c35:	eb 1f                	jmp    8048c56 <phase_3+0x8a>

 8048c37:	b8 54 01 00 00       	mov    $0x154,%eax
 8048c3c:	eb 18                	jmp    8048c56 <phase_3+0x8a>

 8048c3e:	b8 41 01 00 00       	mov    $0x141,%eax
 8048c43:	eb 11                	jmp    8048c56 <phase_3+0x8a>

 8048c45:	e8 51 04 00 00       	call   804909b <explode_bomb>
 8048c4a:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c4f:	eb 05                	jmp    8048c56 <phase_3+0x8a>
 8048c51:	b8 ae 02 00 00       	mov    $0x2ae,%eax
 8048c56:	3b 44 24 08          	cmp    0x8(%esp),%eax;0x3c
 8048c5a:	74 05                	je     8048c61 <phase_3+0x95>;not bomb next
 8048c5c:	e8 3a 04 00 00       	call   804909b <explode_bomb>
 8048c61:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c65:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c6c:	75 04                	jne    8048c72 <phase_3+0xa6>;check fail
 8048c6e:	83 c4 1c             	add    $0x1c,%esp
 8048c71:	c3                   	ret
 8048c72:	e8 19 fb ff ff       	call   8048790 <__stack_chk_fail@plt>

08048c77 <func4>:;in@2(edi), 0x9(ebx)
;edi ebx-1
;edi ebx
 8048c77:	57                   	push   %edi
 8048c78:	56                   	push   %esi
 8048c79:	53                   	push   %ebx
 8048c7a:	8b 5c 24 10          	mov    0x10(%esp),%ebx;9
 8048c7e:	8b 7c 24 14          	mov    0x14(%esp),%edi;@2
 8048c82:	85 db                	test   %ebx,%ebx
 8048c84:	7e 2d                	jle    8048cb3 <func4+0x3c>;sign <=0 eax=0,ret
 8048c86:	89 f8                	mov    %edi,%eax;@2->eax
 8048c88:	83 fb 01             	cmp    $0x1,%ebx
 8048c8b:	74 22                	je     8048caf <func4+0x38>;ret

 8048c8d:	83 ec 08             	sub    $0x8,%esp
 8048c90:	57                   	push   %edi
 8048c91:	8d 43 ff             	lea    -0x1(%ebx),%eax;ebx--
 8048c94:	50                   	push   %eax
 8048c95:	e8 dd ff ff ff       	call   8048c77 <func4>
 8048c9a:	83 c4 08             	add    $0x8,%esp

;ebx==1 ==> first out ==> eax=edi,ebx=2
;second in ebx=3(-2),eax=esi(2*edi+1)
;third in ebx=4(-2),eax=edi+2(edi+1)
 8048c9d:	8d 34 07             	lea    (%edi,%eax,1),%esi;2*edi+1 -> esi
 8048ca0:	57                   	push   %edi
 8048ca1:	83 eb 02             	sub    $0x2,%ebx;ebx----
 8048ca4:	53                   	push   %ebx
 8048ca5:	e8 cd ff ff ff       	call   8048c77 <func4>
 8048caa:	83 c4 10             	add    $0x10,%esp
 8048cad:	01 f0                	add    %esi,%eax
 ;first out esi(edi+edi+1)->eax
 ;second out eax=>edi+2(edi+1)
 8048caf:	5b                   	pop    %ebx
 8048cb0:	5e                   	pop    %esi
 8048cb1:	5f                   	pop    %edi
 8048cb2:	c3                   	ret
 ;eax=88*edi
 8048cb3:	b8 00 00 00 00       	mov    $0x0,%eax
 8048cb8:	eb f5                	jmp    8048caf <func4+0x38>

08048cba <phase_4>:
 8048cba:	83 ec 1c             	sub    $0x1c,%esp
 8048cbd:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048cc3:	89 44 24 0c          	mov    %eax,0xc(%esp)     ;num->esp+0xc
 8048cc7:	31 c0                	xor    %eax,%eax;0->eax
 8048cc9:	8d 44 24 04          	lea    0x4(%esp),%eax     ;push @1
 8048ccd:	50                   	push   %eax
 8048cce:	8d 44 24 0c          	lea    0xc(%esp),%eax     ;push @2
 8048cd2:	50                   	push   %eax
 8048cd3:	68 6f a1 04 08       	push   $0x804a16f
 8048cd8:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048cdc:	e8 2f fb ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8048ce1:	83 c4 10             	add    $0x10,%esp
 8048ce4:	83 f8 02             	cmp    $0x2,%eax;num=2?
 8048ce7:	74 32                	je     8048d1b <phase_4+0x61>
 8048ce9:	e8 ad 03 00 00       	call   804909b <explode_bomb>
 8048cee:	83 ec 08             	sub    $0x8,%esp
 8048cf1:	ff 74 24 0c          	pushl  0xc(%esp);push @2
 8048cf5:	6a 09                	push   $0x9;push9
 8048cf7:	e8 7b ff ff ff       	call   8048c77 <func4>;call function4
 8048cfc:	83 c4 10             	add    $0x10,%esp

 8048cff:	3b 44 24 08          	cmp    0x8(%esp),%eax;@1=eax(out)
 8048d03:	74 05                	je     8048d0a <phase_4+0x50>
 8048d05:	e8 91 03 00 00       	call   804909b <explode_bomb>
 8048d0a:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048d0e:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d15:	75 12                	jne    8048d29 <phase_4+0x6f>
 8048d17:	83 c4 1c             	add    $0x1c,%esp
 8048d1a:	c3                   	ret
 8048d1b:	8b 44 24 04          	mov    0x4(%esp),%eax;@2->eax
 8048d1f:	83 e8 02             	sub    $0x2,%eax;@2-2
 8048d22:	83 f8 02             	cmp    $0x2,%eax;@2-2 ? 2
 8048d25:	76 c7                	jbe    8048cee <phase_4+0x34>;@2-2<=2 ==> 2~4
 8048d27:	eb c0                	jmp    8048ce9 <phase_4+0x2f>
 8048d29:	e8 62 fa ff ff       	call   8048790 <__stack_chk_fail@plt>

08048d2e <phase_5>:
 8048d2e:	53                   	push   %ebx
 8048d2f:	83 ec 14             	sub    $0x14,%esp
 8048d32:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8048d36:	53                   	push   %ebx
 8048d37:	e8 4b 02 00 00       	call   8048f87 <string_length>
 8048d3c:	83 c4 10             	add    $0x10,%esp
 8048d3f:	83 f8 06             	cmp    $0x6,%eax      ;length=6
 8048d42:	74 05                	je     8048d49 <phase_5+0x1b>
 8048d44:	e8 52 03 00 00       	call   804909b <explode_bomb>
 8048d49:	89 d8                	mov    %ebx,%eax
 8048d4b:	83 c3 06             	add    $0x6,%ebx
 8048d4e:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048d53:	0f b6 10             	movzbl (%eax),%edx
 8048d56:	83 e2 0f             	and    $0xf,%edx;‘0~9’->0~9
 8048d59:	03 0c 95 20 a0 04 08 	add    0x804a020(,%edx,4),%ecx
 8048d60:	83 c0 01             	add    $0x1,%eax
 8048d63:	39 d8                	cmp    %ebx,%eax;lopa->6
 8048d65:	75 ec                	jne    8048d53 <phase_5+0x25>
 8048d67:	83 f9 32             	cmp    $0x32,%ecx;1+~6=32
 8048d6a:	74 05                	je     8048d71 <phase_5+0x43>
 8048d6c:	e8 2a 03 00 00       	call   804909b <explode_bomb>
 8048d71:	83 c4 08             	add    $0x8,%esp
 8048d74:	5b                   	pop    %ebx
 8048d75:	c3                   	ret

08048d76 <phase_6>:
 8048d76:	56                   	push   %esi
 8048d77:	53                   	push   %ebx
 8048d78:	83 ec 4c             	sub    $0x4c,%esp
 8048d7b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d81:	89 44 24 44          	mov    %eax,0x44(%esp)
 8048d85:	31 c0                	xor    %eax,%eax
 8048d87:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048d8b:	50                   	push   %eax
 8048d8c:	ff 74 24 5c          	pushl  0x5c(%esp)
 8048d90:	e8 2b 03 00 00       	call   80490c0 <read_six_numbers>
 8048d95:	83 c4 10             	add    $0x10,%esp
 8048d98:	be 00 00 00 00       	mov    $0x0,%esi
 8048d9d:	eb 1c                	jmp    8048dbb <phase_6+0x45>
 8048d9f:	83 c6 01             	add    $0x1,%esi
 8048da2:	83 fe 06             	cmp    $0x6,%esi
 8048da5:	74 2e                	je     8048dd5 <phase_6+0x5f>
 8048da7:	89 f3                	mov    %esi,%ebx
 8048da9:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax
 8048dad:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)
 8048db1:	74 1b                	je     8048dce <phase_6+0x58>;bomb
 8048db3:	83 c3 01             	add    $0x1,%ebx
 8048db6:	83 fb 05             	cmp    $0x5,%ebx
 8048db9:	7e ee                	jle    8048da9 <phase_6+0x33>
 8048dbb:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax;esi=0 ==>first number
 8048dbf:	83 e8 01             	sub    $0x1,%eax
 8048dc2:	83 f8 05             	cmp    $0x5,%eax
 8048dc5:	76 d8                	jbe    8048d9f <phase_6+0x29>;0<=eax<=5
 8048dc7:	e8 cf 02 00 00       	call   804909b <explode_bomb>
 8048dcc:	eb d1                	jmp    8048d9f <phase_6+0x29>
 8048dce:	e8 c8 02 00 00       	call   804909b <explode_bomb>
 8048dd3:	eb de                	jmp    8048db3 <phase_6+0x3d>;;tohere double lopa judge the same number

 ;find the node
 8048dd5:	bb 00 00 00 00       	mov    $0x0,%ebx
 8048dda:	89 de                	mov    %ebx,%esi
 8048ddc:	8b 4c 9c 0c          	mov    0xc(%esp, %ebx,4),%ecx;first number->ecx
 8048de0:	b8 01 00 00 00       	mov    $0x1,%eax
 8048de5:	ba 3c c1 04 08       	mov    $0x804c13c,%edx
 8048dea:	83 f9 01             	cmp    $0x1,%ecx
 8048ded:	7e 0a                	jle    8048df9 <phase_6+0x83>;ecx<=1  ;13c->27d
 8048def:	8b 52 08             	mov    0x8(%edx),%edx;ecx(input)>1  ;4c148->175
 8048df2:	83 c0 01             	add    $0x1,%eax
 8048df5:	39 c8                	cmp    %ecx,%eax
 8048df7:	75 f6                	jne    8048def <phase_6+0x79>;out:eax=ecx
 8048df9:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)
 8048dfd:	83 c3 01             	add    $0x1,%ebx
 8048e00:	83 fb 06             	cmp    $0x6,%ebx
 8048e03:	75 d5                	jne    8048dda <phase_6+0x64>;2addres->27d/175

 ;sequence the line
 8048e05:	8b 5c 24 24          	mov    0x24(%esp),%ebx;6* add(27d/175)
 8048e09:	89 d9                	mov    %ebx,%ecx
 8048e0b:	b8 01 00 00 00       	mov    $0x1,%eax
 8048e10:	8b 54 84 24          	mov    0x24(%esp,%eax,4),%edx
 8048e14:	89 51 08             	mov    %edx,0x8(%ecx);ecx->2addr+8
 8048e17:	83 c0 01             	add    $0x1,%eax
 8048e1a:	89 d1                	mov    %edx,%ecx
 8048e1c:	83 f8 06             	cmp    $0x6,%eax
 8048e1f:	75 ef                	jne    8048e10 <phase_6+0x9a>
;end address with 0
 8048e21:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx);edx - the last
 8048e28:	be 05 00 00 00       	mov    $0x5,%esi
 8048e2d:	eb 08                	jmp    8048e37 <phase_6+0xc1>

 ;first in, ebx - the first
 8048e2f:	8b 5b 08             	mov    0x8(%ebx),%ebx
 8048e32:	83 ee 01             	sub    $0x1,%esi
 8048e35:	74 10                	je     8048e47 <phase_6+0xd1>
 8048e37:	8b 43 08             	mov    0x8(%ebx),%eax
 8048e3a:	8b 00                	mov    (%eax),%eax
 8048e3c:	39 03                	cmp    %eax,(%ebx)
 8048e3e:	7e ef                	jle    8048e2f <phase_6+0xb9>
 8048e40:	e8 56 02 00 00       	call   804909b <explode_bomb>
 8048e45:	eb e8                	jmp    8048e2f <phase_6+0xb9>
 8048e47:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8048e4b:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048e52:	75 06                	jne    8048e5a <phase_6+0xe4>
 8048e54:	83 c4 44             	add    $0x44,%esp
 8048e57:	5b                   	pop    %ebx
 8048e58:	5e                   	pop    %esi
 8048e59:	c3                   	ret
 8048e5a:	e8 31 f9 ff ff       	call   8048790 <__stack_chk_fail@plt>

08048e5f <fun7>:
 8048e5f:	53                   	push   %ebx
 8048e60:	83 ec 08             	sub    $0x8,%esp
 8048e63:	8b 54 24 10          	mov    0x10(%esp),%edx;$0x804c088
 8048e67:	8b 4c 24 14          	mov    0x14(%esp),%ecx;strtolong
 8048e6b:	85 d2                	test   %edx,%edx
 8048e6d:	74 3a                	je     8048ea9 <fun7+0x4a>;eax=-1;ret;
 8048e6f:	8b 1a                	mov    (%edx),%ebx;ebx=(node)
 8048e71:	39 cb                	cmp    %ecx,%ebx
 8048e73:	7f 21                	jg     8048e96 <fun7+0x37>;ebx>ecx(input),leftSon->fun7
 8048e75:	b8 00 00 00 00       	mov    $0x0,%eax;0->eax
 8048e7a:	39 cb                	cmp    %ecx,%ebx
 8048e7c:	74 13                	je     8048e91 <fun7+0x32>;ebx=ecx(input),ret
 8048e7e:	83 ec 08             	sub    $0x8,%esp
 8048e81:	51                   	push   %ecx
 8048e82:	ff 72 08             	pushl  0x8(%edx);rightSon->fun7
 8048e85:	e8 d5 ff ff ff       	call   8048e5f <fun7>
 8048e8a:	83 c4 10             	add    $0x10,%esp
 8048e8d:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax;eax=2*eax+1
 8048e91:	83 c4 08             	add    $0x8,%esp
 8048e94:	5b                   	pop    %ebx
 8048e95:	c3                   	ret
 8048e96:	83 ec 08             	sub    $0x8,%esp
 8048e99:	51                   	push   %ecx
 8048e9a:	ff 72 04             	pushl  0x4(%edx)
 8048e9d:	e8 bd ff ff ff       	call   8048e5f <fun7>
 8048ea2:	83 c4 10             	add    $0x10,%esp
 8048ea5:	01 c0                	add    %eax,%eax;eax=2*eax
 8048ea7:	eb e8                	jmp    8048e91 <fun7+0x32>
 8048ea9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax;eax=-1
 8048eae:	eb e1                	jmp    8048e91 <fun7+0x32>

08048eb0 <secret_phase>:
 8048eb0:	53                   	push   %ebx
 8048eb1:	83 ec 08             	sub    $0x8,%esp
 8048eb4:	e8 42 02 00 00       	call   80490fb <read_line>
 8048eb9:	83 ec 04             	sub    $0x4,%esp
 8048ebc:	6a 0a                	push   $0xa
 8048ebe:	6a 00                	push   $0x0
 8048ec0:	50                   	push   %eax
 8048ec1:	e8 ba f9 ff ff       	call   8048880 <strtol@plt>
 8048ec6:	89 c3                	mov    %eax,%ebx
 8048ec8:	8d 40 ff             	lea    -0x1(%eax),%eax
 8048ecb:	83 c4 10             	add    $0x10,%esp
 8048ece:	3d e8 03 00 00       	cmp    $0x3e8,%eax
 8048ed3:	77 32                	ja     8048f07 <secret_phase+0x57>
 8048ed5:	83 ec 08             	sub    $0x8,%esp

 8048ed8:	53                   	push   %ebx
 8048ed9:	68 88 c0 04 08       	push   $0x804c088;Bitree
 8048ede:	e8 7c ff ff ff       	call   8048e5f <fun7>

 8048ee3:	83 c4 10             	add    $0x10,%esp
 8048ee6:	83 f8 05             	cmp    $0x5,%eax
 8048ee9:	74 05                	je     8048ef0 <secret_phase+0x40>
 8048eeb:	e8 ab 01 00 00       	call   804909b <explode_bomb>
 8048ef0:	83 ec 0c             	sub    $0xc,%esp
 8048ef3:	68 d4 9f 04 08       	push   $0x8049fd4
 8048ef8:	e8 c3 f8 ff ff       	call   80487c0 <puts@plt>
 8048efd:	e8 f8 02 00 00       	call   80491fa <phase_defused>
 8048f02:	83 c4 18             	add    $0x18,%esp
 8048f05:	5b                   	pop    %ebx
 8048f06:	c3                   	ret
 8048f07:	e8 8f 01 00 00       	call   804909b <explode_bomb>
 8048f0c:	eb c7                	jmp    8048ed5 <secret_phase+0x25>

08048f0e <sig_handler>:
 8048f0e:	83 ec 18             	sub    $0x18,%esp
 8048f11:	68 60 a0 04 08       	push   $0x804a060
 8048f16:	e8 a5 f8 ff ff       	call   80487c0 <puts@plt>
 8048f1b:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8048f22:	e8 49 f8 ff ff       	call   8048770 <sleep@plt>
 8048f27:	83 c4 08             	add    $0x8,%esp
 8048f2a:	68 22 a1 04 08       	push   $0x804a122
 8048f2f:	6a 01                	push   $0x1
 8048f31:	e8 0a f9 ff ff       	call   8048840 <__printf_chk@plt>
 8048f36:	83 c4 04             	add    $0x4,%esp
 8048f39:	ff 35 c4 c3 04 08    	pushl  0x804c3c4
 8048f3f:	e8 fc f7 ff ff       	call   8048740 <fflush@plt>
 8048f44:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048f4b:	e8 20 f8 ff ff       	call   8048770 <sleep@plt>
 8048f50:	c7 04 24 2a a1 04 08 	movl   $0x804a12a,(%esp)
 8048f57:	e8 64 f8 ff ff       	call   80487c0 <puts@plt>
 8048f5c:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 8048f63:	e8 78 f8 ff ff       	call   80487e0 <exit@plt>

08048f68 <invalid_phase>:
 8048f68:	83 ec 10             	sub    $0x10,%esp
 8048f6b:	ff 74 24 14          	pushl  0x14(%esp)
 8048f6f:	68 32 a1 04 08       	push   $0x804a132
 8048f74:	6a 01                	push   $0x1
 8048f76:	e8 c5 f8 ff ff       	call   8048840 <__printf_chk@plt>
 8048f7b:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048f82:	e8 59 f8 ff ff       	call   80487e0 <exit@plt>

08048f87 <string_length>:
 8048f87:	8b 54 24 04          	mov    0x4(%esp),%edx
 8048f8b:	80 3a 00             	cmpb   $0x0,(%edx)
 8048f8e:	74 10                	je     8048fa0 <string_length+0x19>
 8048f90:	b8 00 00 00 00       	mov    $0x0,%eax
 8048f95:	83 c0 01             	add    $0x1,%eax
 8048f98:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 8048f9c:	75 f7                	jne    8048f95 <string_length+0xe>
 8048f9e:	f3 c3                	repz ret
 8048fa0:	b8 00 00 00 00       	mov    $0x0,%eax
 8048fa5:	c3                   	ret

08048fa6 <strings_not_equal>:
 8048fa6:	57                   	push   %edi
 8048fa7:	56                   	push   %esi
 8048fa8:	53                   	push   %ebx
 8048fa9:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8048fad:	8b 74 24 14          	mov    0x14(%esp),%esi
 8048fb1:	53                   	push   %ebx
 8048fb2:	e8 d0 ff ff ff       	call   8048f87 <string_length>
 8048fb7:	89 c7                	mov    %eax,%edi
 8048fb9:	89 34 24             	mov    %esi,(%esp)
 8048fbc:	e8 c6 ff ff ff       	call   8048f87 <string_length>
 8048fc1:	83 c4 04             	add    $0x4,%esp
 8048fc4:	ba 01 00 00 00       	mov    $0x1,%edx
 8048fc9:	39 c7                	cmp    %eax,%edi
 8048fcb:	74 06                	je     8048fd3 <strings_not_equal+0x2d>
 8048fcd:	89 d0                	mov    %edx,%eax
 8048fcf:	5b                   	pop    %ebx
 8048fd0:	5e                   	pop    %esi
 8048fd1:	5f                   	pop    %edi
 8048fd2:	c3                   	ret
 8048fd3:	0f b6 03             	movzbl (%ebx),%eax
 8048fd6:	84 c0                	test   %al,%al
 8048fd8:	74 23                	je     8048ffd <strings_not_equal+0x57>
 8048fda:	3a 06                	cmp    (%esi),%al
 8048fdc:	75 26                	jne    8049004 <strings_not_equal+0x5e>
 8048fde:	83 c3 01             	add    $0x1,%ebx
 8048fe1:	83 c6 01             	add    $0x1,%esi
 8048fe4:	0f b6 03             	movzbl (%ebx),%eax
 8048fe7:	84 c0                	test   %al,%al
 8048fe9:	74 0b                	je     8048ff6 <strings_not_equal+0x50>
 8048feb:	3a 06                	cmp    (%esi),%al
 8048fed:	74 ef                	je     8048fde <strings_not_equal+0x38>
 8048fef:	ba 01 00 00 00       	mov    $0x1,%edx
 8048ff4:	eb d7                	jmp    8048fcd <strings_not_equal+0x27>
 8048ff6:	ba 00 00 00 00       	mov    $0x0,%edx
 8048ffb:	eb d0                	jmp    8048fcd <strings_not_equal+0x27>
 8048ffd:	ba 00 00 00 00       	mov    $0x0,%edx
 8049002:	eb c9                	jmp    8048fcd <strings_not_equal+0x27>
 8049004:	ba 01 00 00 00       	mov    $0x1,%edx
 8049009:	eb c2                	jmp    8048fcd <strings_not_equal+0x27>

0804900b <initialize_bomb>:
 804900b:	83 ec 14             	sub    $0x14,%esp
 804900e:	68 0e 8f 04 08       	push   $0x8048f0e
 8049013:	6a 02                	push   $0x2
 8049015:	e8 46 f7 ff ff       	call   8048760 <signal@plt>
 804901a:	83 c4 1c             	add    $0x1c,%esp
 804901d:	c3                   	ret

0804901e <initialize_bomb_solve>:
 804901e:	f3 c3                	repz ret

08049020 <blank_line>:
 8049020:	56                   	push   %esi
 8049021:	53                   	push   %ebx
 8049022:	83 ec 04             	sub    $0x4,%esp
 8049025:	8b 74 24 10          	mov    0x10(%esp),%esi
 8049029:	0f b6 1e             	movzbl (%esi),%ebx
 804902c:	84 db                	test   %bl,%bl
 804902e:	74 1b                	je     804904b <blank_line+0x2b>
 8049030:	e8 7b f8 ff ff       	call   80488b0 <__ctype_b_loc@plt>
 8049035:	83 c6 01             	add    $0x1,%esi
 8049038:	0f be db             	movsbl %bl,%ebx
 804903b:	8b 00                	mov    (%eax),%eax
 804903d:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 8049042:	75 e5                	jne    8049029 <blank_line+0x9>
 8049044:	b8 00 00 00 00       	mov    $0x0,%eax
 8049049:	eb 05                	jmp    8049050 <blank_line+0x30>
 804904b:	b8 01 00 00 00       	mov    $0x1,%eax
 8049050:	83 c4 04             	add    $0x4,%esp
 8049053:	5b                   	pop    %ebx
 8049054:	5e                   	pop    %esi
 8049055:	c3                   	ret

08049056 <skip>:
 8049056:	53                   	push   %ebx
 8049057:	83 ec 08             	sub    $0x8,%esp
 804905a:	83 ec 04             	sub    $0x4,%esp
 804905d:	ff 35 d0 c3 04 08    	pushl  0x804c3d0
 8049063:	6a 50                	push   $0x50
 8049065:	a1 cc c3 04 08       	mov    0x804c3cc,%eax
 804906a:	8d 04 80             	lea    (%eax,%eax,4),%eax
 804906d:	c1 e0 04             	shl    $0x4,%eax
 8049070:	05 e0 c3 04 08       	add    $0x804c3e0,%eax
 8049075:	50                   	push   %eax
 8049076:	e8 d5 f6 ff ff       	call   8048750 <fgets@plt>
 804907b:	89 c3                	mov    %eax,%ebx
 804907d:	83 c4 10             	add    $0x10,%esp
 8049080:	85 c0                	test   %eax,%eax
 8049082:	74 10                	je     8049094 <skip+0x3e>
 8049084:	83 ec 0c             	sub    $0xc,%esp
 8049087:	50                   	push   %eax
 8049088:	e8 93 ff ff ff       	call   8049020 <blank_line>
 804908d:	83 c4 10             	add    $0x10,%esp
 8049090:	85 c0                	test   %eax,%eax
 8049092:	75 c6                	jne    804905a <skip+0x4>
 8049094:	89 d8                	mov    %ebx,%eax
 8049096:	83 c4 08             	add    $0x8,%esp
 8049099:	5b                   	pop    %ebx
 804909a:	c3                   	ret

0804909b <explode_bomb>:
 804909b:	83 ec 18             	sub    $0x18,%esp
 804909e:	68 43 a1 04 08       	push   $0x804a143
 80490a3:	e8 18 f7 ff ff       	call   80487c0 <puts@plt>
 80490a8:	c7 04 24 4c a1 04 08 	movl   $0x804a14c,(%esp)
 80490af:	e8 0c f7 ff ff       	call   80487c0 <puts@plt>
 80490b4:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80490bb:	e8 20 f7 ff ff       	call   80487e0 <exit@plt>

080490c0 <read_six_numbers>:
 80490c0:	83 ec 0c             	sub    $0xc,%esp
 80490c3:	8b 44 24 14          	mov    0x14(%esp),%eax
 80490c7:	8d 50 14             	lea    0x14(%eax),%edx
 80490ca:	52                   	push   %edx
 80490cb:	8d 50 10             	lea    0x10(%eax),%edx
 80490ce:	52                   	push   %edx
 80490cf:	8d 50 0c             	lea    0xc(%eax),%edx
 80490d2:	52                   	push   %edx
 80490d3:	8d 50 08             	lea    0x8(%eax),%edx
 80490d6:	52                   	push   %edx
 80490d7:	8d 50 04             	lea    0x4(%eax),%edx
 80490da:	52                   	push   %edx
 80490db:	50                   	push   %eax
 80490dc:	68 63 a1 04 08       	push   $0x804a163
 80490e1:	ff 74 24 2c          	pushl  0x2c(%esp)
 80490e5:	e8 26 f7 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 80490ea:	83 c4 20             	add    $0x20,%esp
 80490ed:	83 f8 05             	cmp    $0x5,%eax
 80490f0:	7e 04                	jle    80490f6 <read_six_numbers+0x36>
 80490f2:	83 c4 0c             	add    $0xc,%esp
 80490f5:	c3                   	ret
 80490f6:	e8 a0 ff ff ff       	call   804909b <explode_bomb>

080490fb <read_line>:
 80490fb:	57                   	push   %edi
 80490fc:	56                   	push   %esi
 80490fd:	53                   	push   %ebx
 80490fe:	e8 53 ff ff ff       	call   8049056 <skip>
 8049103:	85 c0                	test   %eax,%eax
 8049105:	74 4b                	je     8049152 <read_line+0x57>
 8049107:	8b 15 cc c3 04 08    	mov    0x804c3cc,%edx
 804910d:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 8049110:	c1 e3 04             	shl    $0x4,%ebx
 8049113:	81 c3 e0 c3 04 08    	add    $0x804c3e0,%ebx
 8049119:	b8 00 00 00 00       	mov    $0x0,%eax
 804911e:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049123:	89 df                	mov    %ebx,%edi
 8049125:	f2 ae                	repnz scas %es:(%edi),%al
 8049127:	f7 d1                	not    %ecx
 8049129:	83 e9 01             	sub    $0x1,%ecx
 804912c:	83 f9 4e             	cmp    $0x4e,%ecx
 804912f:	0f 8f 8d 00 00 00    	jg     80491c2 <read_line+0xc7>
 8049135:	8d 04 92             	lea    (%edx,%edx,4),%eax
 8049138:	c1 e0 04             	shl    $0x4,%eax
 804913b:	c6 84 01 df c3 04 08 	movb   $0x0,0x804c3df(%ecx,%eax,1)
 8049142:	00
 8049143:	83 c2 01             	add    $0x1,%edx
 8049146:	89 15 cc c3 04 08    	mov    %edx,0x804c3cc
 804914c:	89 d8                	mov    %ebx,%eax
 804914e:	5b                   	pop    %ebx
 804914f:	5e                   	pop    %esi
 8049150:	5f                   	pop    %edi
 8049151:	c3                   	ret
 8049152:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 8049157:	39 05 d0 c3 04 08    	cmp    %eax,0x804c3d0
 804915d:	74 40                	je     804919f <read_line+0xa4>
 804915f:	83 ec 0c             	sub    $0xc,%esp
 8049162:	68 93 a1 04 08       	push   $0x804a193
 8049167:	e8 44 f6 ff ff       	call   80487b0 <getenv@plt>
 804916c:	83 c4 10             	add    $0x10,%esp
 804916f:	85 c0                	test   %eax,%eax
 8049171:	75 45                	jne    80491b8 <read_line+0xbd>
 8049173:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 8049178:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 804917d:	e8 d4 fe ff ff       	call   8049056 <skip>
 8049182:	85 c0                	test   %eax,%eax
 8049184:	75 81                	jne    8049107 <read_line+0xc>
 8049186:	83 ec 0c             	sub    $0xc,%esp
 8049189:	68 75 a1 04 08       	push   $0x804a175
 804918e:	e8 2d f6 ff ff       	call   80487c0 <puts@plt>
 8049193:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804919a:	e8 41 f6 ff ff       	call   80487e0 <exit@plt>
 804919f:	83 ec 0c             	sub    $0xc,%esp
 80491a2:	68 75 a1 04 08       	push   $0x804a175
 80491a7:	e8 14 f6 ff ff       	call   80487c0 <puts@plt>
 80491ac:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80491b3:	e8 28 f6 ff ff       	call   80487e0 <exit@plt>
 80491b8:	83 ec 0c             	sub    $0xc,%esp
 80491bb:	6a 00                	push   $0x0
 80491bd:	e8 1e f6 ff ff       	call   80487e0 <exit@plt>
 80491c2:	83 ec 0c             	sub    $0xc,%esp
 80491c5:	68 9e a1 04 08       	push   $0x804a19e
 80491ca:	e8 f1 f5 ff ff       	call   80487c0 <puts@plt>
 80491cf:	a1 cc c3 04 08       	mov    0x804c3cc,%eax
 80491d4:	8d 50 01             	lea    0x1(%eax),%edx
 80491d7:	89 15 cc c3 04 08    	mov    %edx,0x804c3cc
 80491dd:	6b c0 50             	imul   $0x50,%eax,%eax
 80491e0:	05 e0 c3 04 08       	add    $0x804c3e0,%eax
 80491e5:	ba b9 a1 04 08       	mov    $0x804a1b9,%edx
 80491ea:	b9 04 00 00 00       	mov    $0x4,%ecx
 80491ef:	89 c7                	mov    %eax,%edi
 80491f1:	89 d6                	mov    %edx,%esi
 80491f3:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 80491f5:	e8 a1 fe ff ff       	call   804909b <explode_bomb>

080491fa <phase_defused>:
 80491fa:	83 ec 6c             	sub    $0x6c,%esp
 80491fd:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049203:	89 44 24 5c          	mov    %eax,0x5c(%esp)
 8049207:	31 c0                	xor    %eax,%eax
 8049209:	83 3d cc c3 04 08 06 	cmpl   $0x6,0x804c3cc;fun7
 8049210:	74 11                	je     8049223 <phase_defused+0x29>
 8049212:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 8049216:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804921d:	75 7b                	jne    804929a <phase_defused+0xa0>;fail
 804921f:	83 c4 6c             	add    $0x6c,%esp
 8049222:	c3                   	ret
 8049223:	83 ec 0c             	sub    $0xc,%esp
 8049226:	8d 44 24 18          	lea    0x18(%esp),%eax
 804922a:	50                   	push   %eax
 804922b:	8d 44 24 18          	lea    0x18(%esp),%eax
 804922f:	50                   	push   %eax
 8049230:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049234:	50                   	push   %eax
 8049235:	68 c9 a1 04 08       	push   $0x804a1c9;
 804923a:	68 d0 c4 04 08       	push   $0x804c4d0;
 804923f:	e8 cc f5 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8049244:	83 c4 20             	add    $0x20,%esp
 8049247:	83 f8 03             	cmp    $0x3,%eax
 804924a:	74 12                	je     804925e <phase_defused+0x64>;num==3
 804924c:	83 ec 0c             	sub    $0xc,%esp
 804924f:	68 f8 a0 04 08       	push   $0x804a0f8
 8049254:	e8 67 f5 ff ff       	call   80487c0 <puts@plt>
 8049259:	83 c4 10             	add    $0x10,%esp
 804925c:	eb b4                	jmp    8049212 <phase_defused+0x18>;ret
 804925e:	83 ec 08             	sub    $0x8,%esp
 8049261:	68 d2 a1 04 08       	push   $0x804a1d2
 8049266:	8d 44 24 18          	lea    0x18(%esp),%eax
 804926a:	50                   	push   %eax
 804926b:	e8 36 fd ff ff       	call   8048fa6 <strings_not_equal>
 8049270:	83 c4 10             	add    $0x10,%esp
 8049273:	85 c0                	test   %eax,%eax
 8049275:	75 d5                	jne    804924c <phase_defused+0x52>;ret
 8049277:	83 ec 0c             	sub    $0xc,%esp;or eax=0 str_equal
 804927a:	68 98 a0 04 08       	push   $0x804a098
 804927f:	e8 3c f5 ff ff       	call   80487c0 <puts@plt>
 8049284:	c7 04 24 c0 a0 04 08 	movl   $0x804a0c0,(%esp)
 804928b:	e8 30 f5 ff ff       	call   80487c0 <puts@plt>
 8049290:	e8 1b fc ff ff       	call   8048eb0 <secret_phase>
 8049295:	83 c4 10             	add    $0x10,%esp
 8049298:	eb b2                	jmp    804924c <phase_defused+0x52>
 804929a:	e8 f1 f4 ff ff       	call   8048790 <__stack_chk_fail@plt>

0804929f <sigalrm_handler>:
 804929f:	83 ec 0c             	sub    $0xc,%esp
 80492a2:	6a 00                	push   $0x0
 80492a4:	68 28 a2 04 08       	push   $0x804a228
 80492a9:	6a 01                	push   $0x1
 80492ab:	ff 35 a0 c3 04 08    	pushl  0x804c3a0
 80492b1:	e8 aa f5 ff ff       	call   8048860 <__fprintf_chk@plt>
 80492b6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80492bd:	e8 1e f5 ff ff       	call   80487e0 <exit@plt>

080492c2 <rio_readlineb>:
 80492c2:	55                   	push   %ebp
 80492c3:	57                   	push   %edi
 80492c4:	56                   	push   %esi
 80492c5:	53                   	push   %ebx
 80492c6:	83 ec 1c             	sub    $0x1c,%esp
 80492c9:	83 f9 01             	cmp    $0x1,%ecx
 80492cc:	76 79                	jbe    8049347 <rio_readlineb+0x85>
 80492ce:	89 d7                	mov    %edx,%edi
 80492d0:	89 c3                	mov    %eax,%ebx
 80492d2:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80492d6:	bd 01 00 00 00       	mov    $0x1,%ebp
 80492db:	8d 70 0c             	lea    0xc(%eax),%esi
 80492de:	eb 0a                	jmp    80492ea <rio_readlineb+0x28>
 80492e0:	e8 4b f5 ff ff       	call   8048830 <__errno_location@plt>
 80492e5:	83 38 04             	cmpl   $0x4,(%eax)
 80492e8:	75 66                	jne    8049350 <rio_readlineb+0x8e>
 80492ea:	8b 43 04             	mov    0x4(%ebx),%eax
 80492ed:	85 c0                	test   %eax,%eax
 80492ef:	7f 23                	jg     8049314 <rio_readlineb+0x52>
 80492f1:	83 ec 04             	sub    $0x4,%esp
 80492f4:	68 00 20 00 00       	push   $0x2000
 80492f9:	56                   	push   %esi
 80492fa:	ff 33                	pushl  (%ebx)
 80492fc:	e8 2f f4 ff ff       	call   8048730 <read@plt>
 8049301:	89 43 04             	mov    %eax,0x4(%ebx)
 8049304:	83 c4 10             	add    $0x10,%esp
 8049307:	85 c0                	test   %eax,%eax
 8049309:	78 d5                	js     80492e0 <rio_readlineb+0x1e>
 804930b:	85 c0                	test   %eax,%eax
 804930d:	74 48                	je     8049357 <rio_readlineb+0x95>
 804930f:	89 73 08             	mov    %esi,0x8(%ebx)
 8049312:	eb d6                	jmp    80492ea <rio_readlineb+0x28>
 8049314:	8b 4b 08             	mov    0x8(%ebx),%ecx
 8049317:	0f b6 11             	movzbl (%ecx),%edx
 804931a:	83 c1 01             	add    $0x1,%ecx
 804931d:	89 4b 08             	mov    %ecx,0x8(%ebx)
 8049320:	83 e8 01             	sub    $0x1,%eax
 8049323:	89 43 04             	mov    %eax,0x4(%ebx)
 8049326:	83 c7 01             	add    $0x1,%edi
 8049329:	88 57 ff             	mov    %dl,-0x1(%edi)
 804932c:	80 fa 0a             	cmp    $0xa,%dl
 804932f:	74 09                	je     804933a <rio_readlineb+0x78>
 8049331:	83 c5 01             	add    $0x1,%ebp
 8049334:	3b 6c 24 0c          	cmp    0xc(%esp),%ebp
 8049338:	75 b0                	jne    80492ea <rio_readlineb+0x28>
 804933a:	c6 07 00             	movb   $0x0,(%edi)
 804933d:	89 e8                	mov    %ebp,%eax
 804933f:	83 c4 1c             	add    $0x1c,%esp
 8049342:	5b                   	pop    %ebx
 8049343:	5e                   	pop    %esi
 8049344:	5f                   	pop    %edi
 8049345:	5d                   	pop    %ebp
 8049346:	c3                   	ret
 8049347:	89 d7                	mov    %edx,%edi
 8049349:	bd 01 00 00 00       	mov    $0x1,%ebp
 804934e:	eb ea                	jmp    804933a <rio_readlineb+0x78>
 8049350:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049355:	eb 05                	jmp    804935c <rio_readlineb+0x9a>
 8049357:	b8 00 00 00 00       	mov    $0x0,%eax
 804935c:	85 c0                	test   %eax,%eax
 804935e:	75 0c                	jne    804936c <rio_readlineb+0xaa>
 8049360:	83 fd 01             	cmp    $0x1,%ebp
 8049363:	75 d5                	jne    804933a <rio_readlineb+0x78>
 8049365:	bd 00 00 00 00       	mov    $0x0,%ebp
 804936a:	eb d1                	jmp    804933d <rio_readlineb+0x7b>
 804936c:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
 8049371:	eb ca                	jmp    804933d <rio_readlineb+0x7b>

08049373 <submitr>:
 8049373:	55                   	push   %ebp
 8049374:	57                   	push   %edi
 8049375:	56                   	push   %esi
 8049376:	53                   	push   %ebx
 8049377:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 804937d:	8b 9c 24 74 a0 00 00 	mov    0xa074(%esp),%ebx
 8049384:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 804938b:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804938f:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 8049396:	89 44 24 10          	mov    %eax,0x10(%esp)
 804939a:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 80493a1:	89 44 24 14          	mov    %eax,0x14(%esp)
 80493a5:	8b b4 24 88 a0 00 00 	mov    0xa088(%esp),%esi
 80493ac:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 80493b3:	89 44 24 18          	mov    %eax,0x18(%esp)
 80493b7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80493bd:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 80493c4:	31 c0                	xor    %eax,%eax
 80493c6:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80493cd:	00
 80493ce:	6a 00                	push   $0x0
 80493d0:	6a 01                	push   $0x1
 80493d2:	6a 02                	push   $0x2
 80493d4:	e8 77 f4 ff ff       	call   8048850 <socket@plt>
 80493d9:	83 c4 10             	add    $0x10,%esp
 80493dc:	85 c0                	test   %eax,%eax
 80493de:	0f 88 04 01 00 00    	js     80494e8 <submitr+0x175>
 80493e4:	89 c5                	mov    %eax,%ebp
 80493e6:	83 ec 0c             	sub    $0xc,%esp
 80493e9:	53                   	push   %ebx
 80493ea:	e8 81 f4 ff ff       	call   8048870 <gethostbyname@plt>
 80493ef:	83 c4 10             	add    $0x10,%esp
 80493f2:	85 c0                	test   %eax,%eax
 80493f4:	0f 84 40 01 00 00    	je     804953a <submitr+0x1c7>
 80493fa:	8d 5c 24 30          	lea    0x30(%esp),%ebx
 80493fe:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8049405:	00
 8049406:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804940d:	00
 804940e:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 8049415:	00
 8049416:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804941d:	00
 804941e:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 8049425:	6a 0c                	push   $0xc
 8049427:	ff 70 0c             	pushl  0xc(%eax)
 804942a:	8b 40 10             	mov    0x10(%eax),%eax
 804942d:	ff 30                	pushl  (%eax)
 804942f:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049433:	50                   	push   %eax
 8049434:	e8 97 f3 ff ff       	call   80487d0 <__memmove_chk@plt>
 8049439:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 8049440:	00
 8049441:	66 c1 c8 08          	ror    $0x8,%ax
 8049445:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 804944a:	83 c4 0c             	add    $0xc,%esp
 804944d:	6a 10                	push   $0x10
 804944f:	53                   	push   %ebx
 8049450:	55                   	push   %ebp
 8049451:	e8 3a f4 ff ff       	call   8048890 <connect@plt>
 8049456:	83 c4 10             	add    $0x10,%esp
 8049459:	85 c0                	test   %eax,%eax
 804945b:	0f 88 49 01 00 00    	js     80495aa <submitr+0x237>
 8049461:	ba ff ff ff ff       	mov    $0xffffffff,%edx
 8049466:	b8 00 00 00 00       	mov    $0x0,%eax
 804946b:	89 d1                	mov    %edx,%ecx
 804946d:	89 f7                	mov    %esi,%edi
 804946f:	f2 ae                	repnz scas %es:(%edi),%al
 8049471:	89 cb                	mov    %ecx,%ebx
 8049473:	f7 d3                	not    %ebx
 8049475:	89 d1                	mov    %edx,%ecx
 8049477:	8b 7c 24 08          	mov    0x8(%esp),%edi
 804947b:	f2 ae                	repnz scas %es:(%edi),%al
 804947d:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 8049481:	89 d1                	mov    %edx,%ecx
 8049483:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 8049487:	f2 ae                	repnz scas %es:(%edi),%al
 8049489:	89 cf                	mov    %ecx,%edi
 804948b:	f7 d7                	not    %edi
 804948d:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
 8049491:	89 d1                	mov    %edx,%ecx
 8049493:	8b 7c 24 10          	mov    0x10(%esp),%edi
 8049497:	f2 ae                	repnz scas %es:(%edi),%al
 8049499:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804949d:	2b 54 24 18          	sub    0x18(%esp),%edx
 80494a1:	29 ca                	sub    %ecx,%edx
 80494a3:	8d 44 5b fd          	lea    -0x3(%ebx,%ebx,2),%eax
 80494a7:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 80494ab:	3d 00 20 00 00       	cmp    $0x2000,%eax
 80494b0:	0f 87 56 01 00 00    	ja     804960c <submitr+0x299>
 80494b6:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 80494bd:	b9 00 08 00 00       	mov    $0x800,%ecx
 80494c2:	b8 00 00 00 00       	mov    $0x0,%eax
 80494c7:	89 d7                	mov    %edx,%edi
 80494c9:	f3 ab                	rep stos %eax,%es:(%edi)
 80494cb:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80494d0:	89 f7                	mov    %esi,%edi
 80494d2:	f2 ae                	repnz scas %es:(%edi),%al
 80494d4:	f7 d1                	not    %ecx
 80494d6:	89 cb                	mov    %ecx,%ebx
 80494d8:	83 eb 01             	sub    $0x1,%ebx
 80494db:	0f 84 07 06 00 00    	je     8049ae8 <submitr+0x775>
 80494e1:	89 d7                	mov    %edx,%edi
 80494e3:	e9 b0 01 00 00       	jmp    8049698 <submitr+0x325>
 80494e8:	8b 44 24 14          	mov    0x14(%esp),%eax
 80494ec:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80494f2:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 80494f9:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049500:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049507:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804950e:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049515:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 804951c:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 8049523:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 804952a:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 8049530:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049535:	e9 d0 04 00 00       	jmp    8049a0a <submitr+0x697>
 804953a:	8b 44 24 14          	mov    0x14(%esp),%eax
 804953e:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049544:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 804954b:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 8049552:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 8049559:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049560:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049567:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 804956e:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 8049575:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 804957c:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 8049583:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 804958a:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 8049590:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 8049594:	83 ec 0c             	sub    $0xc,%esp
 8049597:	55                   	push   %ebp
 8049598:	e8 03 f3 ff ff       	call   80488a0 <close@plt>
 804959d:	83 c4 10             	add    $0x10,%esp
 80495a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80495a5:	e9 60 04 00 00       	jmp    8049a0a <submitr+0x697>
 80495aa:	8b 44 24 14          	mov    0x14(%esp),%eax
 80495ae:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80495b4:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 80495bb:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 80495c2:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 80495c9:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 80495d0:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 80495d7:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 80495de:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 80495e5:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80495ec:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 80495f2:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 80495f6:	83 ec 0c             	sub    $0xc,%esp
 80495f9:	55                   	push   %ebp
 80495fa:	e8 a1 f2 ff ff       	call   80488a0 <close@plt>
 80495ff:	83 c4 10             	add    $0x10,%esp
 8049602:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049607:	e9 fe 03 00 00       	jmp    8049a0a <submitr+0x697>
 804960c:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049610:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049616:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 804961d:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 8049624:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 804962b:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 8049632:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 8049639:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 8049640:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 8049647:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 804964e:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 8049655:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 804965c:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 8049663:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 804966a:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 8049671:	83 ec 0c             	sub    $0xc,%esp
 8049674:	55                   	push   %ebp
 8049675:	e8 26 f2 ff ff       	call   80488a0 <close@plt>
 804967a:	83 c4 10             	add    $0x10,%esp
 804967d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049682:	e9 83 03 00 00       	jmp    8049a0a <submitr+0x697>
 8049687:	88 17                	mov    %dl,(%edi)
 8049689:	8d 7f 01             	lea    0x1(%edi),%edi
 804968c:	83 c6 01             	add    $0x1,%esi
 804968f:	83 eb 01             	sub    $0x1,%ebx
 8049692:	0f 84 50 04 00 00    	je     8049ae8 <submitr+0x775>
 8049698:	0f b6 16             	movzbl (%esi),%edx
 804969b:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 804969e:	b8 01 00 00 00       	mov    $0x1,%eax
 80496a3:	80 f9 0f             	cmp    $0xf,%cl
 80496a6:	77 0d                	ja     80496b5 <submitr+0x342>
 80496a8:	b8 d9 ff 00 00       	mov    $0xffd9,%eax
 80496ad:	d3 e8                	shr    %cl,%eax
 80496af:	83 f0 01             	xor    $0x1,%eax
 80496b2:	83 e0 01             	and    $0x1,%eax
 80496b5:	80 fa 5f             	cmp    $0x5f,%dl
 80496b8:	74 cd                	je     8049687 <submitr+0x314>
 80496ba:	84 c0                	test   %al,%al
 80496bc:	74 c9                	je     8049687 <submitr+0x314>
 80496be:	89 d0                	mov    %edx,%eax
 80496c0:	83 e0 df             	and    $0xffffffdf,%eax
 80496c3:	83 e8 41             	sub    $0x41,%eax
 80496c6:	3c 19                	cmp    $0x19,%al
 80496c8:	76 bd                	jbe    8049687 <submitr+0x314>
 80496ca:	80 fa 20             	cmp    $0x20,%dl
 80496cd:	74 58                	je     8049727 <submitr+0x3b4>
 80496cf:	8d 42 e0             	lea    -0x20(%edx),%eax
 80496d2:	3c 5f                	cmp    $0x5f,%al
 80496d4:	76 09                	jbe    80496df <submitr+0x36c>
 80496d6:	80 fa 09             	cmp    $0x9,%dl
 80496d9:	0f 85 c5 03 00 00    	jne    8049aa4 <submitr+0x731>
 80496df:	83 ec 0c             	sub    $0xc,%esp
 80496e2:	0f b6 d2             	movzbl %dl,%edx
 80496e5:	52                   	push   %edx
 80496e6:	68 34 a3 04 08       	push   $0x804a334
 80496eb:	6a 08                	push   $0x8
 80496ed:	6a 01                	push   $0x1
 80496ef:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 80496f6:	50                   	push   %eax
 80496f7:	e8 c4 f1 ff ff       	call   80488c0 <__sprintf_chk@plt>
 80496fc:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049703:	00
 8049704:	88 07                	mov    %al,(%edi)
 8049706:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 804970d:	00
 804970e:	88 47 01             	mov    %al,0x1(%edi)
 8049711:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 8049718:	00
 8049719:	88 47 02             	mov    %al,0x2(%edi)
 804971c:	83 c4 20             	add    $0x20,%esp
 804971f:	8d 7f 03             	lea    0x3(%edi),%edi
 8049722:	e9 65 ff ff ff       	jmp    804968c <submitr+0x319>
 8049727:	c6 07 2b             	movb   $0x2b,(%edi)
 804972a:	8d 7f 01             	lea    0x1(%edi),%edi
 804972d:	e9 5a ff ff ff       	jmp    804968c <submitr+0x319>
 8049732:	01 c6                	add    %eax,%esi
 8049734:	29 c3                	sub    %eax,%ebx
 8049736:	74 24                	je     804975c <submitr+0x3e9>
 8049738:	83 ec 04             	sub    $0x4,%esp
 804973b:	53                   	push   %ebx
 804973c:	56                   	push   %esi
 804973d:	55                   	push   %ebp
 804973e:	e8 bd f0 ff ff       	call   8048800 <write@plt>
 8049743:	83 c4 10             	add    $0x10,%esp
 8049746:	85 c0                	test   %eax,%eax
 8049748:	7f e8                	jg     8049732 <submitr+0x3bf>
 804974a:	e8 e1 f0 ff ff       	call   8048830 <__errno_location@plt>
 804974f:	83 38 04             	cmpl   $0x4,(%eax)
 8049752:	0f 85 b0 00 00 00    	jne    8049808 <submitr+0x495>
 8049758:	89 f8                	mov    %edi,%eax
 804975a:	eb d6                	jmp    8049732 <submitr+0x3bf>
 804975c:	83 7c 24 08 00       	cmpl   $0x0,0x8(%esp)
 8049761:	0f 88 a1 00 00 00    	js     8049808 <submitr+0x495>
 8049767:	89 6c 24 40          	mov    %ebp,0x40(%esp)
 804976b:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 8049772:	00
 8049773:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049777:	89 44 24 48          	mov    %eax,0x48(%esp)
 804977b:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049780:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049787:	8d 44 24 40          	lea    0x40(%esp),%eax
 804978b:	e8 32 fb ff ff       	call   80492c2 <rio_readlineb>
 8049790:	85 c0                	test   %eax,%eax
 8049792:	0f 8e d6 00 00 00    	jle    804986e <submitr+0x4fb>
 8049798:	83 ec 0c             	sub    $0xc,%esp
 804979b:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 80497a2:	50                   	push   %eax
 80497a3:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 80497a7:	50                   	push   %eax
 80497a8:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 80497af:	50                   	push   %eax
 80497b0:	68 3b a3 04 08       	push   $0x804a33b
 80497b5:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 80497bc:	50                   	push   %eax
 80497bd:	e8 4e f0 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 80497c2:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 80497c6:	83 c4 20             	add    $0x20,%esp
 80497c9:	3d c8 00 00 00       	cmp    $0xc8,%eax
 80497ce:	0f 84 a6 01 00 00    	je     804997a <submitr+0x607>
 80497d4:	83 ec 08             	sub    $0x8,%esp
 80497d7:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 80497de:	52                   	push   %edx
 80497df:	50                   	push   %eax
 80497e0:	68 4c a2 04 08       	push   $0x804a24c
 80497e5:	6a ff                	push   $0xffffffff
 80497e7:	6a 01                	push   $0x1
 80497e9:	ff 74 24 30          	pushl  0x30(%esp)
 80497ed:	e8 ce f0 ff ff       	call   80488c0 <__sprintf_chk@plt>
 80497f2:	83 c4 14             	add    $0x14,%esp
 80497f5:	55                   	push   %ebp
 80497f6:	e8 a5 f0 ff ff       	call   80488a0 <close@plt>
 80497fb:	83 c4 10             	add    $0x10,%esp
 80497fe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049803:	e9 02 02 00 00       	jmp    8049a0a <submitr+0x697>
 8049808:	8b 44 24 14          	mov    0x14(%esp),%eax
 804980c:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049812:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049819:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049820:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049827:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804982e:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049835:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 804983c:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 8049843:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 804984a:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 8049851:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049858:	83 ec 0c             	sub    $0xc,%esp
 804985b:	55                   	push   %ebp
 804985c:	e8 3f f0 ff ff       	call   80488a0 <close@plt>
 8049861:	83 c4 10             	add    $0x10,%esp
 8049864:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049869:	e9 9c 01 00 00       	jmp    8049a0a <submitr+0x697>
 804986e:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049872:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049878:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 804987f:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049886:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 804988d:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049894:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804989b:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 80498a2:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 80498a9:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 80498b0:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 80498b7:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 80498be:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 80498c5:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 80498cc:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 80498d2:	83 ec 0c             	sub    $0xc,%esp
 80498d5:	55                   	push   %ebp
 80498d6:	e8 c5 ef ff ff       	call   80488a0 <close@plt>
 80498db:	83 c4 10             	add    $0x10,%esp
 80498de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80498e3:	e9 22 01 00 00       	jmp    8049a0a <submitr+0x697>
 80498e8:	8b 44 24 14          	mov    0x14(%esp),%eax
 80498ec:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80498f2:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 80498f9:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049900:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049907:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804990e:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049915:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 804991c:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049923:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 804992a:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 8049931:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049938:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 804993f:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 8049943:	83 ec 0c             	sub    $0xc,%esp
 8049946:	55                   	push   %ebp
 8049947:	e8 54 ef ff ff       	call   80488a0 <close@plt>
 804994c:	83 c4 10             	add    $0x10,%esp
 804994f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049954:	e9 b1 00 00 00       	jmp    8049a0a <submitr+0x697>
 8049959:	85 c0                	test   %eax,%eax
 804995b:	74 4b                	je     80499a8 <submitr+0x635>
 804995d:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049962:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049969:	8d 44 24 40          	lea    0x40(%esp),%eax
 804996d:	e8 50 f9 ff ff       	call   80492c2 <rio_readlineb>
 8049972:	85 c0                	test   %eax,%eax
 8049974:	0f 8e 6e ff ff ff    	jle    80498e8 <submitr+0x575>
 804997a:	0f b6 94 24 4c 20 00 	movzbl 0x204c(%esp),%edx
 8049981:	00
 8049982:	b8 0d 00 00 00       	mov    $0xd,%eax
 8049987:	29 d0                	sub    %edx,%eax
 8049989:	75 ce                	jne    8049959 <submitr+0x5e6>
 804998b:	0f b6 94 24 4d 20 00 	movzbl 0x204d(%esp),%edx
 8049992:	00
 8049993:	b8 0a 00 00 00       	mov    $0xa,%eax
 8049998:	29 d0                	sub    %edx,%eax
 804999a:	75 bd                	jne    8049959 <submitr+0x5e6>
 804999c:	0f b6 84 24 4e 20 00 	movzbl 0x204e(%esp),%eax
 80499a3:	00
 80499a4:	f7 d8                	neg    %eax
 80499a6:	eb b1                	jmp    8049959 <submitr+0x5e6>
 80499a8:	b9 00 20 00 00       	mov    $0x2000,%ecx
 80499ad:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 80499b4:	8d 44 24 40          	lea    0x40(%esp),%eax
 80499b8:	e8 05 f9 ff ff       	call   80492c2 <rio_readlineb>
 80499bd:	85 c0                	test   %eax,%eax
 80499bf:	7e 68                	jle    8049a29 <submitr+0x6b6>
 80499c1:	83 ec 08             	sub    $0x8,%esp
 80499c4:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 80499cb:	50                   	push   %eax
 80499cc:	8b 7c 24 20          	mov    0x20(%esp),%edi
 80499d0:	57                   	push   %edi
 80499d1:	e8 ca ed ff ff       	call   80487a0 <strcpy@plt>
 80499d6:	89 2c 24             	mov    %ebp,(%esp)
 80499d9:	e8 c2 ee ff ff       	call   80488a0 <close@plt>
 80499de:	0f b6 17             	movzbl (%edi),%edx
 80499e1:	b8 4f 00 00 00       	mov    $0x4f,%eax
 80499e6:	83 c4 10             	add    $0x10,%esp
 80499e9:	29 d0                	sub    %edx,%eax
 80499eb:	75 13                	jne    8049a00 <submitr+0x68d>
 80499ed:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 80499f1:	b8 4b 00 00 00       	mov    $0x4b,%eax
 80499f6:	29 d0                	sub    %edx,%eax
 80499f8:	75 06                	jne    8049a00 <submitr+0x68d>
 80499fa:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 80499fe:	f7 d8                	neg    %eax
 8049a00:	85 c0                	test   %eax,%eax
 8049a02:	0f 95 c0             	setne  %al
 8049a05:	0f b6 c0             	movzbl %al,%eax
 8049a08:	f7 d8                	neg    %eax
 8049a0a:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049a11:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049a18:	0f 85 2a 01 00 00    	jne    8049b48 <submitr+0x7d5>
 8049a1e:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049a24:	5b                   	pop    %ebx
 8049a25:	5e                   	pop    %esi
 8049a26:	5f                   	pop    %edi
 8049a27:	5d                   	pop    %ebp
 8049a28:	c3                   	ret
 8049a29:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049a2d:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049a33:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049a3a:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049a41:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049a48:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049a4f:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049a56:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049a5d:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049a64:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049a6b:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049a72:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049a79:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049a80:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049a87:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049a8e:	83 ec 0c             	sub    $0xc,%esp
 8049a91:	55                   	push   %ebp
 8049a92:	e8 09 ee ff ff       	call   80488a0 <close@plt>
 8049a97:	83 c4 10             	add    $0x10,%esp
 8049a9a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049a9f:	e9 66 ff ff ff       	jmp    8049a0a <submitr+0x697>
 8049aa4:	a1 7c a2 04 08       	mov    0x804a27c,%eax
 8049aa9:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 8049aad:	89 03                	mov    %eax,(%ebx)
 8049aaf:	a1 bb a2 04 08       	mov    0x804a2bb,%eax
 8049ab4:	89 43 3f             	mov    %eax,0x3f(%ebx)
 8049ab7:	8d 7b 04             	lea    0x4(%ebx),%edi
 8049aba:	83 e7 fc             	and    $0xfffffffc,%edi
 8049abd:	29 fb                	sub    %edi,%ebx
 8049abf:	89 d8                	mov    %ebx,%eax
 8049ac1:	be 7c a2 04 08       	mov    $0x804a27c,%esi
 8049ac6:	29 de                	sub    %ebx,%esi
 8049ac8:	83 c0 43             	add    $0x43,%eax
 8049acb:	c1 e8 02             	shr    $0x2,%eax
 8049ace:	89 c1                	mov    %eax,%ecx
 8049ad0:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049ad2:	83 ec 0c             	sub    $0xc,%esp
 8049ad5:	55                   	push   %ebp
 8049ad6:	e8 c5 ed ff ff       	call   80488a0 <close@plt>
 8049adb:	83 c4 10             	add    $0x10,%esp
 8049ade:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ae3:	e9 22 ff ff ff       	jmp    8049a0a <submitr+0x697>
 8049ae8:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049aef:	50                   	push   %eax
 8049af0:	ff 74 24 14          	pushl  0x14(%esp)
 8049af4:	ff 74 24 14          	pushl  0x14(%esp)
 8049af8:	ff 74 24 14          	pushl  0x14(%esp)
 8049afc:	68 c0 a2 04 08       	push   $0x804a2c0
 8049b01:	68 00 20 00 00       	push   $0x2000
 8049b06:	6a 01                	push   $0x1
 8049b08:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049b0f:	57                   	push   %edi
 8049b10:	e8 ab ed ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049b15:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b1a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049b1f:	f2 ae                	repnz scas %es:(%edi),%al
 8049b21:	f7 d1                	not    %ecx
 8049b23:	8d 41 ff             	lea    -0x1(%ecx),%eax
 8049b26:	89 44 24 28          	mov    %eax,0x28(%esp)
 8049b2a:	83 c4 20             	add    $0x20,%esp
 8049b2d:	89 c3                	mov    %eax,%ebx
 8049b2f:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049b36:	bf 00 00 00 00       	mov    $0x0,%edi
 8049b3b:	85 c0                	test   %eax,%eax
 8049b3d:	0f 85 f5 fb ff ff    	jne    8049738 <submitr+0x3c5>
 8049b43:	e9 1f fc ff ff       	jmp    8049767 <submitr+0x3f4>
 8049b48:	e8 43 ec ff ff       	call   8048790 <__stack_chk_fail@plt>

08049b4d <init_timeout>:
 8049b4d:	53                   	push   %ebx
 8049b4e:	83 ec 08             	sub    $0x8,%esp
 8049b51:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049b55:	85 db                	test   %ebx,%ebx
 8049b57:	74 24                	je     8049b7d <init_timeout+0x30>
 8049b59:	83 ec 08             	sub    $0x8,%esp
 8049b5c:	68 9f 92 04 08       	push   $0x804929f
 8049b61:	6a 0e                	push   $0xe
 8049b63:	e8 f8 eb ff ff       	call   8048760 <signal@plt>
 8049b68:	85 db                	test   %ebx,%ebx
 8049b6a:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b6f:	0f 48 d8             	cmovs  %eax,%ebx
 8049b72:	89 1c 24             	mov    %ebx,(%esp)
 8049b75:	e8 06 ec ff ff       	call   8048780 <alarm@plt>
 8049b7a:	83 c4 10             	add    $0x10,%esp
 8049b7d:	83 c4 08             	add    $0x8,%esp
 8049b80:	5b                   	pop    %ebx
 8049b81:	c3                   	ret

08049b82 <init_driver>:
 8049b82:	57                   	push   %edi
 8049b83:	56                   	push   %esi
 8049b84:	53                   	push   %ebx
 8049b85:	83 ec 28             	sub    $0x28,%esp
 8049b88:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049b8c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049b92:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049b96:	31 c0                	xor    %eax,%eax
 8049b98:	6a 01                	push   $0x1
 8049b9a:	6a 0d                	push   $0xd
 8049b9c:	e8 bf eb ff ff       	call   8048760 <signal@plt>
 8049ba1:	83 c4 08             	add    $0x8,%esp
 8049ba4:	6a 01                	push   $0x1
 8049ba6:	6a 1d                	push   $0x1d
 8049ba8:	e8 b3 eb ff ff       	call   8048760 <signal@plt>
 8049bad:	83 c4 08             	add    $0x8,%esp
 8049bb0:	6a 01                	push   $0x1
 8049bb2:	6a 1d                	push   $0x1d
 8049bb4:	e8 a7 eb ff ff       	call   8048760 <signal@plt>
 8049bb9:	83 c4 0c             	add    $0xc,%esp
 8049bbc:	6a 00                	push   $0x0
 8049bbe:	6a 01                	push   $0x1
 8049bc0:	6a 02                	push   $0x2
 8049bc2:	e8 89 ec ff ff       	call   8048850 <socket@plt>
 8049bc7:	83 c4 10             	add    $0x10,%esp
 8049bca:	85 c0                	test   %eax,%eax
 8049bcc:	0f 88 a9 00 00 00    	js     8049c7b <init_driver+0xf9>
 8049bd2:	89 c3                	mov    %eax,%ebx
 8049bd4:	83 ec 0c             	sub    $0xc,%esp
 8049bd7:	68 4c a3 04 08       	push   $0x804a34c
 8049bdc:	e8 8f ec ff ff       	call   8048870 <gethostbyname@plt>
 8049be1:	83 c4 10             	add    $0x10,%esp
 8049be4:	85 c0                	test   %eax,%eax
 8049be6:	0f 84 da 00 00 00    	je     8049cc6 <init_driver+0x144>
 8049bec:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 8049bf0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8049bf7:	00
 8049bf8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8049bff:	00
 8049c00:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049c07:	00
 8049c08:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049c0f:	00
 8049c10:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 8049c17:	6a 0c                	push   $0xc
 8049c19:	ff 70 0c             	pushl  0xc(%eax)
 8049c1c:	8b 40 10             	mov    0x10(%eax),%eax
 8049c1f:	ff 30                	pushl  (%eax)
 8049c21:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8049c25:	50                   	push   %eax
 8049c26:	e8 a5 eb ff ff       	call   80487d0 <__memmove_chk@plt>
 8049c2b:	66 c7 44 24 1e 3b 6e 	movw   $0x6e3b,0x1e(%esp)
 8049c32:	83 c4 0c             	add    $0xc,%esp
 8049c35:	6a 10                	push   $0x10
 8049c37:	57                   	push   %edi
 8049c38:	53                   	push   %ebx
 8049c39:	e8 52 ec ff ff       	call   8048890 <connect@plt>
 8049c3e:	83 c4 10             	add    $0x10,%esp
 8049c41:	85 c0                	test   %eax,%eax
 8049c43:	0f 88 e9 00 00 00    	js     8049d32 <init_driver+0x1b0>
 8049c49:	83 ec 0c             	sub    $0xc,%esp
 8049c4c:	53                   	push   %ebx
 8049c4d:	e8 4e ec ff ff       	call   80488a0 <close@plt>
 8049c52:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 8049c57:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 8049c5b:	83 c4 10             	add    $0x10,%esp
 8049c5e:	b8 00 00 00 00       	mov    $0x0,%eax
 8049c63:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8049c67:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049c6e:	0f 85 eb 00 00 00    	jne    8049d5f <init_driver+0x1dd>
 8049c74:	83 c4 20             	add    $0x20,%esp
 8049c77:	5b                   	pop    %ebx
 8049c78:	5e                   	pop    %esi
 8049c79:	5f                   	pop    %edi
 8049c7a:	c3                   	ret
 8049c7b:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049c81:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049c88:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049c8f:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049c96:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049c9d:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049ca4:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 8049cab:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 8049cb2:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 8049cb9:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 8049cbf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cc4:	eb 9d                	jmp    8049c63 <init_driver+0xe1>
 8049cc6:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049ccc:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 8049cd3:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 8049cda:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 8049ce1:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049ce8:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049cef:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 8049cf6:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 8049cfd:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 8049d04:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 8049d0b:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 8049d12:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 8049d18:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 8049d1c:	83 ec 0c             	sub    $0xc,%esp
 8049d1f:	53                   	push   %ebx
 8049d20:	e8 7b eb ff ff       	call   80488a0 <close@plt>
 8049d25:	83 c4 10             	add    $0x10,%esp
 8049d28:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d2d:	e9 31 ff ff ff       	jmp    8049c63 <init_driver+0xe1>
 8049d32:	83 ec 0c             	sub    $0xc,%esp
 8049d35:	68 4c a3 04 08       	push   $0x804a34c
 8049d3a:	68 0c a3 04 08       	push   $0x804a30c
 8049d3f:	6a ff                	push   $0xffffffff
 8049d41:	6a 01                	push   $0x1
 8049d43:	56                   	push   %esi
 8049d44:	e8 77 eb ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049d49:	83 c4 14             	add    $0x14,%esp
 8049d4c:	53                   	push   %ebx
 8049d4d:	e8 4e eb ff ff       	call   80488a0 <close@plt>
 8049d52:	83 c4 10             	add    $0x10,%esp
 8049d55:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d5a:	e9 04 ff ff ff       	jmp    8049c63 <init_driver+0xe1>
 8049d5f:	e8 2c ea ff ff       	call   8048790 <__stack_chk_fail@plt>

08049d64 <driver_post>:
 8049d64:	53                   	push   %ebx
 8049d65:	83 ec 08             	sub    $0x8,%esp
 8049d68:	8b 54 24 10          	mov    0x10(%esp),%edx
 8049d6c:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049d70:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8049d74:	85 c0                	test   %eax,%eax
 8049d76:	75 17                	jne    8049d8f <driver_post+0x2b>
 8049d78:	85 d2                	test   %edx,%edx
 8049d7a:	74 05                	je     8049d81 <driver_post+0x1d>
 8049d7c:	80 3a 00             	cmpb   $0x0,(%edx)
 8049d7f:	75 34                	jne    8049db5 <driver_post+0x51>
 8049d81:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 8049d86:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 8049d8a:	83 c4 08             	add    $0x8,%esp
 8049d8d:	5b                   	pop    %ebx
 8049d8e:	c3                   	ret
 8049d8f:	83 ec 04             	sub    $0x4,%esp
 8049d92:	ff 74 24 18          	pushl  0x18(%esp)
 8049d96:	68 5a a3 04 08       	push   $0x804a35a
 8049d9b:	6a 01                	push   $0x1
 8049d9d:	e8 9e ea ff ff       	call   8048840 <__printf_chk@plt>
 8049da2:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 8049da7:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 8049dab:	83 c4 10             	add    $0x10,%esp
 8049dae:	b8 00 00 00 00       	mov    $0x0,%eax
 8049db3:	eb d5                	jmp    8049d8a <driver_post+0x26>
 8049db5:	83 ec 04             	sub    $0x4,%esp
 8049db8:	53                   	push   %ebx
 8049db9:	ff 74 24 1c          	pushl  0x1c(%esp)
 8049dbd:	68 71 a3 04 08       	push   $0x804a371
 8049dc2:	52                   	push   %edx
 8049dc3:	68 79 a3 04 08       	push   $0x804a379
 8049dc8:	68 6e 3b 00 00       	push   $0x3b6e
 8049dcd:	68 4c a3 04 08       	push   $0x804a34c
 8049dd2:	e8 9c f5 ff ff       	call   8049373 <submitr>
 8049dd7:	83 c4 20             	add    $0x20,%esp
 8049dda:	eb ae                	jmp    8049d8a <driver_post+0x26>
 8049ddc:	66 90                	xchg   %ax,%ax
 8049dde:	66 90                	xchg   %ax,%ax

08049de0 <__libc_csu_init>:
 8049de0:	55                   	push   %ebp
 8049de1:	57                   	push   %edi
 8049de2:	56                   	push   %esi
 8049de3:	53                   	push   %ebx
 8049de4:	e8 27 eb ff ff       	call   8048910 <__x86.get_pc_thunk.bx>
 8049de9:	81 c3 17 22 00 00    	add    $0x2217,%ebx
 8049def:	83 ec 0c             	sub    $0xc,%esp
 8049df2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8049df6:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 8049dfc:	e8 f3 e8 ff ff       	call   80486f4 <_init>
 8049e01:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8049e07:	29 c6                	sub    %eax,%esi
 8049e09:	c1 fe 02             	sar    $0x2,%esi
 8049e0c:	85 f6                	test   %esi,%esi
 8049e0e:	74 25                	je     8049e35 <__libc_csu_init+0x55>
 8049e10:	31 ff                	xor    %edi,%edi
 8049e12:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8049e18:	83 ec 04             	sub    $0x4,%esp
 8049e1b:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049e1f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049e23:	55                   	push   %ebp
 8049e24:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8049e2b:	83 c7 01             	add    $0x1,%edi
 8049e2e:	83 c4 10             	add    $0x10,%esp
 8049e31:	39 fe                	cmp    %edi,%esi
 8049e33:	75 e3                	jne    8049e18 <__libc_csu_init+0x38>
 8049e35:	83 c4 0c             	add    $0xc,%esp
 8049e38:	5b                   	pop    %ebx
 8049e39:	5e                   	pop    %esi
 8049e3a:	5f                   	pop    %edi
 8049e3b:	5d                   	pop    %ebp
 8049e3c:	c3                   	ret
 8049e3d:	8d 76 00             	lea    0x0(%esi),%esi

08049e40 <__libc_csu_fini>:
 8049e40:	f3 c3                	repz ret

Disassembly of section .fini:

08049e44 <_fini>:
 8049e44:	53                   	push   %ebx
 8049e45:	83 ec 08             	sub    $0x8,%esp
 8049e48:	e8 c3 ea ff ff       	call   8048910 <__x86.get_pc_thunk.bx>
 8049e4d:	81 c3 b3 21 00 00    	add    $0x21b3,%ebx
 8049e53:	83 c4 08             	add    $0x8,%esp
 8049e56:	5b                   	pop    %ebx
 8049e57:	c3                   	ret
